/*! \page page_controller_manager_ros Controller Manager Ros
<H3>Setup controllers</H3>
The rocoma_ros::ControllerManagerRos::ControllerOptions struct is used to store all necessary information about a controller.
The rocoma_ros::ControllerManagerRos::ControllerOptionsPair combines the options for controller and corresponding emergency controller.<BR>

ControllerOptions:<BR>
<I> pluginName_</I>:    Name under which the controller plugin was exported<BR>
<I> name_</I>:          Desired name of the controller<BR>
<I> parameterPath_</I>: Absolute path of the parameter file<BR>
<I> isRos_</I>:         Boolean to indicate if the controller is a ros controller.<BR>

To setup the controllers use the function rocoma_ros::ControllerManagerRos::setupControllers.

<H3>Setup controllers via ros parameter server</H3>

Using the function rocoma_ros::ControllerManagerRos::setupControllersFromParameterServer the controllers can be setup using the ros parameter server.
The parameter server has to contain the following parameters for this to work properly.
\code{yaml}
controller_manager:
   failproof_controller: "MyFailProofController"
   controller_pairs:
     - controller_pair:
         controller:
           plugin_name:              "MyControllerPlugin"
           name:                     "MyController"
           is_ros:                   true
           parameter_package:        "my_controller_package"
           parameter_path:           "my_param_folder/my_param_file.xml"
         emergency_controller:
           plugin_name:              "MyEmergencyControllerPlugin"
           name:                     "MyEmergencyController "
           is_ros:                   false
           package:                  "my_emergency_controller_package"
           parameter_path:           "my_emergency_param_folder/my_emergency_param_file.xml"
     - controller_pair:
         ... Add more controller pairs
\endcode

<H3>ROS communication provided by the controller manager</H3>

Services:
 - Switch controller advertised as "controller_manager/switch_controller" of type rocoma_msgs/srv/SwitchController.srv (blocking until finished switching!)
 - Get available controllers advertised as "controller_manager/get_available_controllers" of type rocoma_msgs/srv/GetAvailableControllers.srv
 - Get active controller advertised as "controller_manager/get_active_controller" of type rocoma_msgs/srv/GetActiveController.srv
 - Emergency stop advertised as "controller_manager/emergency_stop" of type rocoma_msgs/srv/EmergencyStop.srv

Publishers:
 - Emergency stop notification advertised as "notify_emergency_stop" of type any_msgs/msg/State.msg

*/
